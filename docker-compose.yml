version: '3.9'

networks:
  streamnet:
    driver: bridge

volumes:
  postgres_data:
  grafana_data:

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-stream-db
    restart: always
    environment:
      POSTGRES_DB: streaming_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - streamnet

  rtsp-server:
    platform: linux/amd64
    image: bluenviron/mediamtx:latest-ffmpeg
    container_name: rtsp-server
    ports:
      - '1935:1935' # RTMP
      - '8554:8554' # RTSP
      - '9997:9997' # API
      - '8889:8889' # WebRTC
      - '8189:8189/udp'
    volumes:
      - ./mediamtx.yml:/mediamtx.yml:ro
    networks:
      - streamnet
    restart: always
    healthcheck:
      disable: true

  ffmpeg-simulator:
    platform: linux/amd64
    image: jrottenberg/ffmpeg:4.1-alpine
    container_name: ffmpeg-simulator
    entrypoint: /bin/sh
    command: -c "sleep 5 && ffmpeg -stream_loop -1 -re -i /videos/car.mp4 -c:v libx264 -preset veryfast -tune zerolatency -c:a aac -f flv rtmp://rtsp-server:1935/stream > /logs/ffmpeg.log 2>&1"
    volumes:
      - ./videos:/videos
      - ./logs:/logs
    networks:
      - streamnet
    restart: unless-stopped

  ffmpeg-cat:
    platform: linux/amd64
    image: jrottenberg/ffmpeg:4.1-alpine
    container_name: ffmpeg-cat
    entrypoint: /bin/sh
    command: -c "sleep 5 && ffmpeg -stream_loop -1 -re -i /videos/cat.mp4 -c:v libx264 -preset veryfast -tune zerolatency -c:a aac -f flv rtmp://rtsp-server:1935/cat > /logs/ffmpeg-cat.log 2>&1"
    volumes:
      - ./videos:/videos
      - ./logs:/logs
    networks:
      - streamnet
    restart: unless-stopped

  ffmpeg-drone:
    platform: linux/amd64
    image: jrottenberg/ffmpeg:4.1-alpine
    container_name: ffmpeg-drone
    entrypoint: /bin/sh
    command: -c "sleep 5 && ffmpeg -stream_loop -1 -re -i /videos/drone_video.mp4 -c:v libx264 -preset veryfast -tune zerolatency -c:a aac -f flv rtmp://rtsp-server:1935/drone > /logs/ffmpeg-drone.log 2>&1"
    volumes:
      - ./videos:/videos
      - ./logs:/logs
    networks:
      - streamnet
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stream-backend
    ports:
      - '6001:6001'
    env_file: .env
    depends_on:
      - postgres
      - rtsp-server
    volumes:
      - ./videos:/videos
      - ./logs:/logs
    networks:
      - streamnet
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - streamnet
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3030:3000'
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - streamnet
    restart: always
