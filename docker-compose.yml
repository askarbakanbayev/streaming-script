version: '3.9'

networks:
  streamnet:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-stream-db
    restart: always
    environment:
      POSTGRES_DB: streaming_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - streamnet

  rtsp-server:
    image: bluenviron/mediamtx:latest
    container_name: rtsp-server
    ports:
      - '1935:1935' # RTMP ingest
      - '8554:8554' # RTSP serve
    volumes:
      - ./mediamtx.yml:/mediamtx.yml:ro
    command: ['/mediamtx.yml']
    networks:
      - streamnet
    restart: always

ffmpeg-simulator:
  image: jrottenberg/ffmpeg:4.1-alpine
  container_name: ffmpeg-simulator
  depends_on:
    - rtsp-server
  volumes:
    - ./videos:/videos # Make sure ./videos/car.mp4 exists
  command:
    [
      '-stream_loop',
      '-1',
      '-re',
      '-i',
      '/videos/car.mp4',
      '-c:v',
      'libx264',
      '-preset',
      'veryfast',
      '-tune',
      'zerolatency',
      '-c:a',
      'aac',
      '-f',
      'flv',
      'rtmp://rtsp-server:1935/stream',
    ]
  networks:
    - streamnet
  restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile # ваш Node.js на Alpine
    container_name: stream-backend
    ports:
      - '6001:6001'
    env_file: .env
    depends_on:
      - postgres
      - rtsp-server
    networks:
      - streamnet
    restart: always

volumes:
  postgres_data:
