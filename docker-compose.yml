version: '3.9'

networks:
  streamnet:
    driver: bridge

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres-stream-db
    restart: always
    environment:
      POSTGRES_DB: streaming_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    networks:
      - streamnet

  rtsp-server:
    image: bluenviron/mediamtx:latest
    container_name: rtsp-server
    ports:
      - '1935:1935'
      - '8554:8554'
    volumes:
      - ./mediamtx.yml:/mediamtx.yml:ro
    command: ['/mediamtx.yml']
    networks:
      - streamnet
    restart: always

  ffmpeg-simulator:
    image: jrottenberg/ffmpeg:4.1-alpine
    container_name: ffmpeg-simulator
    depends_on:
      - rtsp-server
    volumes:
      - ./videos:/videos
    command:
      [
        '-stream_loop',
        '-1',
        '-re',
        '-i',
        '/videos/car.mp4',
        '-c:v',
        'libx264',
        '-preset',
        'veryfast',
        '-tune',
        'zerolatency',
        '-c:a',
        'aac',
        '-f',
        'flv',
        'rtmp://rtsp-server:1935/stream',
      ]
    networks:
      - streamnet
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: stream-backend
    ports:
      - '6001:6001'
    env_file: .env
    depends_on:
      - postgres
      - rtsp-server
    networks:
      - streamnet
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - '9090:9090'
    networks:
      - streamnet
    restart: always

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - '3030:3000'
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - streamnet
    restart: always

volumes:
  postgres_data:
  grafana_data:
