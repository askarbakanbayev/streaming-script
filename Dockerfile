# ---------- STAGE 1: BUILD ----------
    FROM node:current-alpine AS builder

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    RUN apk add --no-cache ffmpeg openssl
    
    # –†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è
    WORKDIR /app
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    COPY package.json yarn.lock ./
    RUN yarn install --frozen-lockfile
    
    # –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω–∏–∫–∏
    COPY . .
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Prisma Client
    RUN npx prisma generate
    
    # –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
    RUN yarn build
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è main.js
    RUN test -f dist/src/main.js || (echo "‚ùå dist/main.js –Ω–µ –Ω–∞–π–¥–µ–Ω" && exit 1)
    
    
    # ---------- STAGE 2: RUNTIME ----------
    FROM node:current-alpine
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    RUN apk add --no-cache ffmpeg openssl netcat-openbsd
    
    WORKDIR /app
    
    # –ö–æ–ø–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã
    COPY --from=builder /app/package.json ./
    COPY --from=builder /app/yarn.lock ./
    COPY --from=builder /app/node_modules ./node_modules
    COPY --from=builder /app/prisma ./prisma
    COPY --from=builder /app/dist ./dist
    
    # –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø–æ–¥ –ª–æ–≥–∏ –∏ –ø—Ä–µ–≤—å—é
    RUN mkdir -p ./logs ./snapshots
    
    # –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø–æ—Ä—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    EXPOSE 6001
    
    # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π PostgreSQL)
    CMD sh -c "until nc -z postgres-stream-db 5432; do echo '‚è≥ –ñ–¥—ë–º –ë–î...'; sleep 1; done && \
      echo '‚úÖ DB ready, migrating...' && \
      npx prisma migrate deploy && \
      echo 'üöÄ Starting app...' && \
      node dist/src/main.js"
    