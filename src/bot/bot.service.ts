import { Injectable, OnModuleInit } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { Telegraf } from 'telegraf';

@Injectable()
export class BotService implements OnModuleInit {
  private bot: Telegraf;
  private readonly adminChatIds: string[];

  constructor(private readonly configService: ConfigService) {
    const token = this.configService.get<string>('BOT_TOKEN');
    const raw = this.configService.get<string>('ADMIN_CHAT_IDS') || '';
    this.adminChatIds = raw
      .split(',')
      .map((id) => id.trim())
      .filter(Boolean);

    if (!token || this.adminChatIds.length === 0) {
      throw new Error(
        'BOT_TOKEN or ADMIN_CHAT_IDS is not defined in environment variables',
      );
    }
    this.bot = new Telegraf(token);
  }

  onModuleInit() {
    this.setup();
  }

  private async setup() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ /start –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî –∏ –∞–¥–º–∏–Ω–æ–≤, –∏ –æ–±—ã—á–Ω—ã—Ö
    this.bot.start((ctx) => {
      ctx.reply(
        `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name || '–¥—Ä—É–≥'}!\n\n` +
          `–≠—Ç–æ –±–æ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ RTMP ‚Üí RTSP.\n` +
          `–í—Å–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.`,
      );
      // –ü—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å chat.id –≤ –±–∞–∑—É, —á—Ç–æ–±—ã –ø–æ—Ç–æ–º —Ä–∞—Å—Å—ã–ª–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    });

    // –ü—Ä–∏–º–µ—Ä –∫–æ–º–∞–Ω–¥—ã /stats
    this.bot.command('stats', (ctx) => {
      ctx.reply('–ó–¥–µ—Å—å –±—É–¥—É—Ç —Ç–µ–∫—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏ –ø–æ—Ç–æ–∫–æ–≤...');
    });

    await this.bot.launch();
    console.log('Bot started');
  }

  /** –†–∞—Å—Å—ã–ª–∞–µ—Ç –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –∞–¥–º–∏–Ω–∞–º */
  async broadcastError(message: string) {
    const text = `üö® *–û—à–∏–±–∫–∞ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞*: ${message}`;
    for (const chatId of this.adminChatIds) {
      try {
        await this.bot.telegram.sendMessage(chatId, text, {
          parse_mode: 'Markdown',
        });
      } catch (err) {
        console.error(
          `–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É ${chatId}:`,
          err,
        );
      }
    }
  }
}
